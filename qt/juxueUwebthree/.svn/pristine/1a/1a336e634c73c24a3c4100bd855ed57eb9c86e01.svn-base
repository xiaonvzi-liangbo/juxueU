const requestUrl = require('../../../utils/request.js')
const number = require('../../../utils/quantity.js')
Page({
  data: {
    showReply: false,
    showNegative: false, //是否是问答
    postData: [],
    postCritic: [],
    showCritic: false,
    tzid: '',
    number: 1,
    replyData: [],
    commentId: '',
    ejindex: '',
    stair: '', //一级评论的内容
    second: '', //二级评论的内容
    collageName: '',
    imgs: [],
    tzisFabulous: '',
    tzfabulousNumber: '',
    tzisCollection: '',
    tzcollectionNumber: '',
    tzcommentNumber: '',
    yjisFabulous: '',
    yjfabulousNumber: '',
    yjcommentNumber: '',
    ejisFabulous: '',
    ejfabulousNumber: '',
    access_token: ''

  },
  onLoad(options) {
    if (options.id == '3') {
      this.setData({
        showNegative: true
      })
    };
    this.setData({
      tzid: options.tzid
    })
    this.getData(this.data.tzid);
    this.getCritic(this.data.tzid);
  },
  //前往话题贴子
  topics(e) {
    wx.navigateTo({
      url: '/pages/tztopics/tztopics?topid=' + e.currentTarget.dataset.topid
    })
  },
  //发帖人详情
  personage(e) {
    wx.navigateTo({
      url: '/pages/universityCircle/myPost/myPost?id=' + e.currentTarget.dataset.id,
    })
  },
  //获取帖子详情
  getData() {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXCollagePostsApp/findById',
      data: {
        id: that.data.tzid,
        followUserId: userid
      },
      method: 'GET',
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.data.code == '200') {
          that.setData({
            postData: res.data.data.data,
            tzisFabulous: res.data.data.data.isFabulous,
            tzfabulousNumber: res.data.data.data.fabulousNumber,
            tzisCollection: res.data.data.data.isCollection,
            tzcollectionNumber: res.data.data.data.collectionNumber,
            tzcommentNumber: res.data.data.data.commentNumber
          })

          if (res.data.data.data.collageName == null) {
            that.setData({
              collageName: "尚未认证"
            })
          } else {
            that.setData({
              collageName: res.data.data.data.collageName
            })
          }
        } else {
          wx.showToast({
            title: '获取帖子失败，请重试！',
            icon: 'none',
            duration: 2000
          })
        }
      }
    })
  },
  //图片放大事件
  amplify(e) {
    let that = this
    var id = e.currentTarget.dataset.id;
    var url = e.currentTarget.dataset.url;
    var previewImgArr = [];
    //通过循环在数据链里面找到和这个id相同的这一组数据，然后再取出这一组数据当中的图片
    var data = that.data.postData.jxCollagePostsFroms;
    for (var i in data) {
      if (id == data[i].id) {
        previewImgArr = previewImgArr.concat(data[i].imgUrl)
      }
    }
    wx.previewImage({
      current: url, // 当前显示图片的http链接
      urls: previewImgArr // 需要预览的图片http链接列表
    })
  },

  //获取评论详情
  getCritic() {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXPostsCommentApp/findByAuto',
      data: {
        postsId: that.data.tzid,
        pageSize: '10',
        pageNum: '1',
        userId: userid
      },
      method: 'GET',
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.rows) {
          that.setData({
            postCritic: res.data.rows,
          })
          for (let i = 0; i < res.data.rows.length; i++) {
            let yj = 'yjisFabulous[' + i + ']'
            let yjNumber = 'yjfabulousNumber[' + i + ']'
            let yjcommentNumber = 'yjcommentNumber[' + i + ']'
            that.setData({
              [yj]: res.data.rows[i].isFabulous,
              [yjNumber]: res.data.rows[i].fabulousNumber,
              [yjcommentNumber]: res.data.rows[i].commentNumber,
            })
          }
        } else {
          that.setData({
            showCritic: true
          })
        }
      }
    })
  },
  //获取评论详情
  getCritics() {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXPostsCommentApp/findByAuto',
      data: {
        postsId: that.data.tzid,
        pageSize: '10',
        pageNum: that.data.number,
        userId: userid
      },
      method: 'GET',
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.rows) {
          that.setData({
            // postCritic: res.data.rows
            postCritic: that.data.postCritic.concat(res.data.rows),
            yjisFabulous: res.data.rows.isFabulous,
            yjfabulousNumber: res.data.rows.fabulousNumber,
            yjcommentNumber: res.data.rows.commentNumber
          })
        } else {
          that.setData({
            showCritic: true
          })
        }
      }
    })
  },
  tolower() {
    if (this.data.postCritic.length == 10) {
      this.data.number++;
      this.getCritics()
    }
  },
  //关注点击事件
  attention(e) {
    let that = this;
    let userid = wx.getStorageSync('userid')
    wx.request({
      url: requestUrl.requestUrl + '/jXFollowApp/findByAuto',
      data: {
        followType: '用户',
        userId: userid,
        followId: e.currentTarget.dataset.followid
      },
      method: 'POST',
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.code == 200) {
          wx.showToast({
            title: '关注成功!',
            icon: 'none',
            duration: 2000
          })
          that.getData(that.data.tzid);

        } else {
          wx.showToast({
            title: '关注失败，请重试!',
            icon: 'none',
            duration: 2000
          })
        }
      }
    })
  },
  //消息回复点击事件
  reply(e) {
    this.setData({
      commentId: e.currentTarget.dataset.reid,
      ejindex: e.currentTarget.dataset.index
    });
    this.write()
  },
  //获取二级评论
  write() {
    let that = this;
    let userid = wx.getStorageSync('userid')
    wx.request({
      url: requestUrl.requestUrl + '/jXPostsCommentTwoApp/getList',
      data: {
        commentId: that.data.commentId,
        userId: userid,
        pageNum: '1',
        pageSize: '10'
      },
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        that.setData({
          replyData: res.data.rows,
        })
        for (let i = 0; i < res.data.rows.length; i++) {
          let ej = 'ejisFabulous[' + i + ']'
          let ejNumber = 'ejfabulousNumber[' + i + ']'
          that.setData({
            [ej]: res.data.rows[i].isFabulous,
            [ejNumber]: res.data.rows[i].fabulousNumber,
          })
        }
      }
    })
    that.setData({
      showReply: true
    })
  },
  //点赞点击事件 
  praise(e) {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXFabulousApp/addDel',
      method: 'post',
      data: {
        fabulousType: e.currentTarget.dataset.type,
        userId: userid,
        fabulousId: e.currentTarget.dataset.id
      },
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.code == '200') {
          if (e.currentTarget.dataset.type == '帖子') {
            if (that.data.tzisFabulous == '1') {
              that.setData({
                tzisFabulous: '0',
                tzfabulousNumber: that.data.tzfabulousNumber - 1
              })
            } else {
              that.setData({
                tzisFabulous: '1',
                tzfabulousNumber: that.data.tzfabulousNumber + 1
              })
            }
          } else if (e.currentTarget.dataset.type == '一级点赞') {
            let i = e.currentTarget.dataset.index
            let yj = 'yjisFabulous[' + i + ']'
            let yjNumber = 'yjfabulousNumber[' + i + ']'
            if (that.data.yjisFabulous[i] == 1) {
              that.setData({
                [yj]: '0',
                [yjNumber]: that.data.yjfabulousNumber[i] - 1
              })
            } else {
              that.setData({
                [yj]: '1',
                [yjNumber]: that.data.yjfabulousNumber[i] + 1
              })
            }

          } else if (e.currentTarget.dataset.type == '二级点赞') {
            let i = e.currentTarget.dataset.index
            let ej = 'ejisFabulous[' + i + ']'
            let ejNumber = 'ejfabulousNumber[' + i + ']'
            if (that.data.ejisFabulous[i] == 1) {
              that.setData({
                [ej]: '0',
                [ejNumber]: that.data.ejfabulousNumber[i] - 1
              })
            } else {
              that.setData({
                [ej]: '1',
                [ejNumber]: that.data.ejfabulousNumber[i] + 1
              })
            }
          }
        }

      }
    })
  },
  //差评点击事件
  negative(e) {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXDifferenceApp/findByAuto',
      method: 'post',
      data: {
        differenceType: e.currentTarget.dataset.type,
        userId: userid,
        differenceId: e.currentTarget.dataset.id
      },
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.code == '200') {
          if (e.currentTarget.dataset.type == '一级评论') {
            that.getCritic()
          } else if (e.currentTarget.dataset.type == '帖子') {
            that.getData()
          }
        }
      }
    })
  },
  //收藏点击事件
  collect(e) {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXCollectionApp/findByAuto',
      method: 'post',
      data: {
        collectionType: '帖子',
        userId: userid,
        collectionId: e.currentTarget.dataset.id
      },
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.code == '200') {
          if (that.data.tzisCollection == '1') {
            that.setData({
              tzisCollection: '0',
              tzcollectionNumber: that.data.tzcollectionNumber - 1
            })
          } else {
            that.setData({
              tzisCollection: '1',
              tzcollectionNumber: that.data.tzcollectionNumber + 1
            })
          }
        }
      }
    })
  },
  /** * 用户分享自定义 */
  onShareAppMessage: function(ops) {
    let userid = wx.getStorageInfo('userid');
    if (ops.from === 'button') {
      // 来自页面内转发按钮
    }
    return {
      title: ops.target.dataset.title,
      path: '/pages/universityCircle/information/information?id=' + ops.target.dataset.id,
      success: function(res) {
        wx.request({
          url: requestUrl.requestUrl + '/jXShareApp/add',
          shareId: ops.target.dataset.id,
          userId: userid,
          header: {
            'content-type': 'application/json',
            'content-type': 'application/x-www-form-urlencoded'
          },
          success(res) {
            if (res.data.code) {}
          }
        })
      },
      fail: function(res) {}
    }
  },
  //消息回复关闭点击事件
  close() {
    this.setData({
      showReply: false
    })
  },
  //监听用户上拉加载
  onReachBottom() {
    let that = this;
    this.data.number++;
    wx.request({
      url: requestUrl.requestUrl + '/jXPostsCommentApp/findByAuto',
      data: {
        postsId: that.data.tzid,
        pageSize: '10',
        pageNum: that.data.number
      },
      method: 'GET',
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.rows) {
          that.setData({
            postCritic: that.data.postCritic.concat(res.data.rows)
          })
        } else {
          that.setData({
            showCritic: true
          })
        }
      }
    })
  },
  //获取accessToken
  accessToken(e) {
    let that = this
    let fun = e.currentTarget.dataset.fun
    wx.request({
      url: requestUrl.requestUrl + '/jj/weChat/getAccessToken',
      method: "get",
      header: {
        'content-type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json'
      },
      success(res) {
        that.setData({
          access_token: res.data.data
        })
        if (fun == "critic") {
          that.critic(e)
        } else if (fun == "level") {
          that.level(e)
        }
      }
    })
  },
  //发送一级评论
  critic(e) {
    let that = this;
    let userid = wx.getStorageSync('userid');
    wx.request({
      url: requestUrl.requestUrl + '/jXPostsCommentApp/add',
      method: 'post',
      data: {
        userId: userid,
        postsId: e.currentTarget.dataset.id,
        info: e.detail.value,
        accessToken: that.data.access_token
      },
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        if (res.data.code == '200') {
          that.setData({
            stair: '',
            number: '1',
            tzcommentNumber: that.data.tzcommentNumber + 1
          })
          that.getCritic();
        }
      }
    })
  },
  //发送二级评论
  level(e) {
    let that = this;
    let userid = wx.getStorageSync('userid');
    let i = that.data.ejindex
    let yjcommentNumber = 'yjcommentNumber[' + i + ']'
    wx.request({
      url: requestUrl.requestUrl + '/jXPostsCommentTwoApp/add',
      method: 'post',
      data: {
        commentId: that.data.commentId,
        userId: userid,
        info: e.detail.value,
        accessToken: that.data.access_token
      },
      header: {
        'content-type': 'application/json',
        'content-type': 'application/x-www-form-urlencoded'
      },
      success(res) {
        that.setData({
          second: '',
          [yjcommentNumber]: that.data.yjcommentNumber[i] + 1
        })

        that.write()
      }
    })
  }
})